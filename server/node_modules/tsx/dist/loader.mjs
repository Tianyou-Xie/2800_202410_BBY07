import{r as s}from"./pkgroll_create-require-CddX1PP_.mjs";import i from"repl";import{transform as l}from"esbuild";import{globalPreload as C,initialize as D,load as F,resolve as G}from"./esm/index.mjs";import"module";import"worker_threads";import"./node-features-Dcn4STxq.mjs";import"./source-map.mjs";import"path";import"url";import"./index-NttFZkao.mjs";import"crypto";import"fs";import"os";import"./temporary-directory-C5UVr6xa.mjs";import"./is-relative-path-pattern-B4sgw8uQ.mjs";import"./client-SVJjVqAT.mjs";import"net";import"./get-pipe-path-BYPSsSrX.mjs";import"get-tsconfig";const n=r=>{const{eval:e}=r,p=async function(t,m,o,a){try{t=(await l(t,{sourcefile:o,loader:"ts",tsconfigRaw:{compilerOptions:{preserveValueImports:!0}},define:{require:"global.require"}})).code}catch{}return e.call(this,t,m,o,a)};r.eval=p},{start:c}=i;i.start=function(){const r=Reflect.apply(c,this,arguments);return n(r),r},s("./cjs/index.cjs");export{C as globalPreload,D as initialize,F as load,G as resolve};
